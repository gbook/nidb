<?xml version="1.0" encoding="UTF-8"?>

<x_symbol id='xSelect'>

<sources>
  <src><file>xselect.js</file><note><![CDATA[]]></note></src>
</sources>

<groups>
  <grp>UI</grp>
</groups>
<type>Object</type>

<description><![CDATA[
Accessible Categories and Sub-Categories.
xSelect is another experiment in unobtrusive DHTML. xSelect implements categories and sub-categories as two SELECT controls where the contents of the second control dynamically change depending on the selection in the main control.
In your HTML create a SELECT element (which I'll call s0) which contains OPTGROUP elements. Within each OPTGROUP are any number of OPTION elements. Given the id of s0, xSelect creates two SELECT elements: The 'main category' SELECT (s1) contains an OPTION for each OPTGROUP in s0. The 'sub-category' SELECT (s2) is dynamically filled with OPTGROUP OPTIONs depending on which category is selected in s1. s1 and s2 are dynamically created and appended to the same form which contains s0. s0 is hidden, s1 is positioned where s0 was, and s2 is positioned below or to the right of s1. If the browser doesn't support the objects required by xSelect, or if the user has javascript disabled, then the user will get the original SELECT which contains all main categories (as OPTGROUPs) and all sub-categories (as OPTIONs within each OPTGROUP).
]]></description>

<syntax>new xSelect(sId, fnSubOnChange, sMainName, sSubName, bUnder, iMargin)</syntax>

<parameters>
  <par><name>sId</name><note><![CDATA[The id of the 'downgrade' SELECT which contains OPTGROUPs]]></note></par>
  <par><name>fnSubOnChange</name><note><![CDATA[Optional. The onchange event listener for the sub-category SELECT (s2)]]></note></par>
  <par><name>sMainName</name><note><![CDATA[Optional. If present, this will be assigned to s1's name and id, else s1's name and id will be (sId + '_main')]]></note></par>
  <par><name>sSubName</name><note><![CDATA[Optional. If present, this will be assigned to s2's name and id, else s2's name and id will be (sId + '_sub')]]></note></par>
  <par><name>bUnder</name><note><![CDATA[Optional. If false or not present s2 is placed to the right of s1, else s2 is placed under s1.]]></note></par>
  <par><name>iMargin</name><note><![CDATA[Optional. The space between s1 and s2.]]></note></par>
</parameters>

<return>Returns an xSelect object. If the browser doesn't support the required objects it returns null.</return>

<dependencies>
  <dep>xGetElementById</dep>
  <dep>xMoveTo</dep>
  <dep>xOffsetLeft</dep>
  <dep>xOffsetTop</dep>
</dependencies>

<demos>
  <demo>
    <url>http://cross-browser.com/x/examples/xselect.php</url>
    <note><![CDATA[Accessible Categories and Sub-Categories]]></note>
  </demo>
</demos>

<revisions>
  <rev>
    <num>4</num><date>5Jun07</date><author>mf</author>
    <note><![CDATA[Removed use of xShow and xHide.]]></note>
  </rev>
  <rev>
    <num>3</num><date>29Nov06</date><author>mf</author>
    <note><![CDATA[Scratch the rev2 change. I added 4 parameters. I removed the 'ready' property and, instead, return null if the required objects don't exist. I moved s1's onchange listener inside the object prototype.]]></note>
  </rev>
  <rev>
    <num>2</num><date>28Nov06</date><author>mf</author>
    <note><![CDATA[Added the id assignment to the 'name' property to support form submissions.]]></note>
  </rev>
  <rev>
    <num>1</num><date>9May05</date><author>mf</author>
    <note><![CDATA[Put in it's own file for use with XC. Still working on opera8 offset bug.]]></note>
  </rev>
</revisions>

</x_symbol>
